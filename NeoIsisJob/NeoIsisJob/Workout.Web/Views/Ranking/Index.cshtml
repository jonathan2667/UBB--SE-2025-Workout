@model Workout.Web.Models.RankingViewModel
@using System.Drawing
@using Workout.Core.Models

@{
    ViewData["Title"] = "Rankings";
}

<div class="container">
    <div class="row">
        <!-- Left side: Simple muscle group selectors -->
        <div class="col-md-5">
            <div class="card mb-4">
                <div class="card-header">
                    <h4>Select Muscle Group</h4>
                </div>
                <div class="card-body">
                    <div class="muscle-group-buttons">
                        <!-- Muscle Group Cards -->
                        <div class="row g-3">
                            <div class="col-6">
                                <a asp-controller="Ranking" asp-action="MuscleGroupDetails" asp-route-muscleGroupId="1" class="text-decoration-none">
                                    <div class="muscle-group-card" style="border-color: @ColorTranslator.ToHtml(Model.GetRankDefinitionForPoints(Model.UserRankings?.FirstOrDefault(r => r.MGID == 1)?.Rank ?? 0).Color)">
                                        <img src="/images/bodyparts/chest.png" alt="Chest" class="body-part-icon mb-2" />
                                        <h5>Chest</h5>
                                        <span class="badge" style="background-color: @ColorTranslator.ToHtml(Model.GetRankDefinitionForPoints(Model.UserRankings?.FirstOrDefault(r => r.MGID == 1)?.Rank ?? 0).Color)">
                                            @(Model.UserRankings?.FirstOrDefault(r => r.MGID == 1)?.Rank ?? 0) pts
                                        </span>
                                    </div>
                                </a>
                            </div>
                            
                            <div class="col-6">
                                <a asp-controller="Ranking" asp-action="MuscleGroupDetails" asp-route-muscleGroupId="2" class="text-decoration-none">
                                    <div class="muscle-group-card" style="border-color: @ColorTranslator.ToHtml(Model.GetRankDefinitionForPoints(Model.UserRankings?.FirstOrDefault(r => r.MGID == 2)?.Rank ?? 0).Color)">
                                        <img src="/images/bodyparts/leg.png" alt="Legs" class="body-part-icon mb-2" />
                                        <h5>Legs</h5>
                                        <span class="badge" style="background-color: @ColorTranslator.ToHtml(Model.GetRankDefinitionForPoints(Model.UserRankings?.FirstOrDefault(r => r.MGID == 2)?.Rank ?? 0).Color)">
                                            @(Model.UserRankings?.FirstOrDefault(r => r.MGID == 2)?.Rank ?? 0) pts
                                        </span>
                                    </div>
                                </a>
                            </div>
                            
                            <div class="col-6">
                                <a asp-controller="Ranking" asp-action="MuscleGroupDetails" asp-route-muscleGroupId="3" class="text-decoration-none">
                                    <div class="muscle-group-card" style="border-color: @ColorTranslator.ToHtml(Model.GetRankDefinitionForPoints(Model.UserRankings?.FirstOrDefault(r => r.MGID == 3)?.Rank ?? 0).Color)">
                                        <img src="/images/bodyparts/arm.png" alt="Arms" class="body-part-icon mb-2" />
                                        <h5>Arms</h5>
                                        <span class="badge" style="background-color: @ColorTranslator.ToHtml(Model.GetRankDefinitionForPoints(Model.UserRankings?.FirstOrDefault(r => r.MGID == 3)?.Rank ?? 0).Color)">
                                            @(Model.UserRankings?.FirstOrDefault(r => r.MGID == 3)?.Rank ?? 0) pts
                                        </span>
                                    </div>
                                </a>
                            </div>
                            
                            <div class="col-6">
                                <a asp-controller="Ranking" asp-action="MuscleGroupDetails" asp-route-muscleGroupId="4" class="text-decoration-none">
                                    <div class="muscle-group-card" style="border-color: @ColorTranslator.ToHtml(Model.GetRankDefinitionForPoints(Model.UserRankings?.FirstOrDefault(r => r.MGID == 4)?.Rank ?? 0).Color)">
                                        <img src="/images/bodyparts/abs.png" alt="Abs" class="body-part-icon mb-2" />
                                        <h5>Abs</h5>
                                        <span class="badge" style="background-color: @ColorTranslator.ToHtml(Model.GetRankDefinitionForPoints(Model.UserRankings?.FirstOrDefault(r => r.MGID == 4)?.Rank ?? 0).Color)">
                                            @(Model.UserRankings?.FirstOrDefault(r => r.MGID == 4)?.Rank ?? 0) pts
                                        </span>
                                    </div>
                                </a>
                            </div>
                            
                            <div class="col-6 mx-auto">
                                <a asp-controller="Ranking" asp-action="MuscleGroupDetails" asp-route-muscleGroupId="5" class="text-decoration-none">
                                    <div class="muscle-group-card" style="border-color: @ColorTranslator.ToHtml(Model.GetRankDefinitionForPoints(Model.UserRankings?.FirstOrDefault(r => r.MGID == 5)?.Rank ?? 0).Color)">
                                        <img src="/images/bodyparts/back.png" alt="Back" class="body-part-icon mb-2" />
                                        <h5>Back</h5>
                                        <span class="badge" style="background-color: @ColorTranslator.ToHtml(Model.GetRankDefinitionForPoints(Model.UserRankings?.FirstOrDefault(r => r.MGID == 5)?.Rank ?? 0).Color)">
                                            @(Model.UserRankings?.FirstOrDefault(r => r.MGID == 5)?.Rank ?? 0) pts
                                        </span>
                                    </div>
                                </a>
                            </div>
                        </div>
                        <p class="mt-3 text-center">Click on a muscle group to see your rank details</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Right side: Rankings explanation -->
        <div class="col-md-7">
            <div class="card">
                <div class="card-header">
                    <h4>Rankings Explained</h4>
                </div>
                <div class="card-body">
                    <p>Your muscle groups are ranked based on your workout performance and consistency. The more you work out specific muscle groups, the higher your rank!</p>
                    
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Rank</th>
                                    <th>Name</th>
                                    <th>Points Range</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var rank in Model.RankDefinitions)
                                {
                                    <tr>
                                        <td>
                                            <img src="@rank.ImagePath" alt="@rank.Name" width="40" height="40" />
                                        </td>
                                        <td>
                                            <span style="color: @ColorTranslator.ToHtml(rank.Color);">@rank.Name</span>
                                        </td>
                                        <td>
                                            <span style="color: @ColorTranslator.ToHtml(rank.Color);">@rank.MinPoints - @rank.MaxPoints</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    @if (Model.UserRankings?.Count > 0)
                    {
                        <h5 class="mt-4">Your Current Rankings</h5>
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Muscle Group</th>
                                        <th>Current Rank</th>
                                        <th>Level</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var ranking in Model.UserRankings)
                                    {
                                        var rankDef = Model.GetRankDefinitionForPoints(ranking.Rank);
                                        <tr>
                                            <td>@(ranking.MuscleGroup?.Name ?? $"Muscle Group {ranking.MGID}")</td>
                                            <td>
                                                <div class="progress">
                                                    <div class="progress-bar" role="progressbar"
                                                         style="width: @GetRankPercentage(ranking.Rank, rankDef)%; background-color: @ColorTranslator.ToHtml(rankDef.Color);"
                                                         aria-valuenow="@ranking.Rank" aria-valuemin="@rankDef.MinPoints" aria-valuemax="@rankDef.MaxPoints">
                                                        @ranking.Rank pts
                                                    </div>
                                                </div>
                                            </td>
                                            <td style="color: @ColorTranslator.ToHtml(rankDef.Color);">
                                                <img src="@rankDef.ImagePath" alt="@rankDef.Name" width="30" height="30" />
                                                @rankDef.Name
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info mt-4">
                            You don't have any rankings yet. Start working out to earn rank points!
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .muscle-group-card {
        border: 3px solid #ddd;
        border-radius: 10px;
        padding: 1.5rem 1rem;
        text-align: center;
        transition: all 0.3s ease;
        background-color: white;
        height: 100%;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }
    
    .muscle-group-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 15px rgba(0,0,0,0.1);
    }
    
    .muscle-group-card h5 {
        margin-bottom: 0.5rem;
        font-weight: 600;
    }
    
    .muscle-group-card .badge {
        padding: 0.4rem 0.8rem;
        font-size: 0.9rem;
    }
    
    .body-part-icon {
        width: 80px;
        height: 80px;
        object-fit: contain;
        filter: drop-shadow(0 2px 3px rgba(0,0,0,0.2));
        transition: all 0.3s ease;
    }
    
    .muscle-group-card:hover .body-part-icon {
        transform: scale(1.1);
    }
</style>

@functions {
    public int GetRankPercentage(int points, RankDefinition rankDef)
    {
        var range = rankDef.MaxPoints - rankDef.MinPoints;
        var progress = points - rankDef.MinPoints;
        
        if (range <= 0)
            return 100;
            
        return (int)Math.Min(100, Math.Max(0, (progress * 100.0 / range)));
    }
} 