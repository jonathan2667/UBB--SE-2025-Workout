@using Workout.Web.ViewModels.Shop
@using Microsoft.AspNetCore.Http
@{
    ViewData["Title"] = "Shop";
}
@model ShopViewModel

<h1 class="mb-4">Shop</h1>

<!-- Search bar and Add Product button -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <input type="text" class="form-control w-50" placeholder="Search product..." id="searchBox" value="@Model.Filter.SearchTerm" />
    @if (Context.Session.GetString("UserId") != null)
    {
        <a class="btn btn-primary ms-3" asp-controller="Shop" asp-action="Create">Add Product</a>
    }
</div>

<div class="row">
    <!-- Filter panel -->
    <div class="col-md-3">
        <div class="card bg-light mb-4">
            <form method="get" id="filterForm">
                <div class="mb-3">
                    <label asp-for="Filter.CategoryId" class="form-label fw-bold">Category</label>
                    <select asp-for="Filter.CategoryId" class="form-select" asp-items="@(new SelectList(Model.Categories, "ID", "Name"))">
                        <option value="">-- Select Category --</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label asp-for="Filter.Color" class="form-label fw-bold">Color</label>
                    <select asp-for="Filter.Color" class="form-select">
                        <option value="">-- Select Color --</option>
                        <option>Red</option>
                        <option>Green</option>
                        <option>Blue</option>
                        <option>Yellow</option>
                        <option>White</option>
                        <option>Black</option>
                    </select>
                </div>

                <div class="mb-3">
                    <label asp-for="Filter.Size" class="form-label fw-bold">Size</label>
                    <select asp-for="Filter.Size" class="form-select">
                        <option value="">-- Select Size --</option>
                        <option>S</option>
                        <option>M</option>
                        <option>L</option>
                        <option>XL</option>
                    </select>
                </div>

                <input type="hidden" asp-for="Filter.SearchTerm" id="searchTermHidden" />
            </form>
            <a href="@Url.Action("Index", "Shop")" class="btn btn-outline-secondary w-100 mt-2">Reset Filters</a>
        </div>
    </div>

    <!-- Product list -->
    <div class="col-md-9">
        <div class="row" id="productList">
            @if (!Model.Products.Any())
            {
                <div class="alert alert-warning">
                    @ViewBag.Message
                </div>
            }
            @foreach (var product in Model.Products)
            {
                <div class="col-md-4 mb-4">
                    <div class="card bg-dark text-white">
                        <img src="@product.PhotoURL" class="card-img-top" alt="@product.Name">
                        <div class="card-body">
                            <h5 class="card-title">@product.Name</h5>
                            <p class="card-text">Color: @product.Color</p>
                            <p class="card-text">Price: $@product.Price</p>
                            <a asp-controller="Shop" asp-action="Product" asp-route-id="@product.ID" class="btn btn-light w-100">View Details</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const form = document.getElementById('filterForm');
        const searchBox = document.getElementById('searchBox');
        const searchHidden = document.getElementById('searchTermHidden');

        // Update hidden field and submit form on Enter
        searchBox.addEventListener('keydown', function (e) {
            if (e.key === 'Enter') {
                e.preventDefault(); // prevent default form submission
                searchHidden.value = searchBox.value;
                form.submit();
            }
        });

        // Submit form on other filter changes
        form.querySelectorAll('select').forEach(el => {
            el.addEventListener('change', () => {
                form.submit();
            });
        });
    </script>
}
