// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workout.Core.Data;

#nullable disable

namespace Workout.Core.Migrations
{
    [DbContext(typeof(WorkoutDbContext))]
    [Migration("20250523133640_SeedProductImages")]
    partial class SeedProductImages
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Workout.Core.Models.CalendarDayModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayNumber")
                        .HasColumnType("int");

                    b.Property<int>("GridColumn")
                        .HasColumnType("int");

                    b.Property<int>("GridRow")
                        .HasColumnType("int");

                    b.Property<bool>("HasClass")
                        .HasColumnType("bit");

                    b.Property<bool>("HasWorkout")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentDay")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWorkoutCompleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("CalendarDays", (string)null);
                });

            modelBuilder.Entity("Workout.Core.Models.CartItemModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("CartItem", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ProductID = 1,
                            UserID = 1
                        },
                        new
                        {
                            ID = 2,
                            ProductID = 2,
                            UserID = 1
                        },
                        new
                        {
                            ID = 3,
                            ProductID = 2,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.CategoryModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Supplements"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Equipment"
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.ClassModel", b =>
                {
                    b.Property<int>("CID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CID"));

                    b.Property<int>("CTID")
                        .HasColumnType("int")
                        .HasColumnName("CTID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PTID")
                        .HasColumnType("int")
                        .HasColumnName("PTID");

                    b.HasKey("CID");

                    b.HasIndex("CTID");

                    b.HasIndex("PTID");

                    b.ToTable("Classes", (string)null);

                    b.HasData(
                        new
                        {
                            CID = 1,
                            CTID = 1,
                            Description = "danceeee",
                            Name = "Samba",
                            PTID = 1
                        },
                        new
                        {
                            CID = 2,
                            CTID = 2,
                            Description = "Guts",
                            Name = "Box",
                            PTID = 2
                        },
                        new
                        {
                            CID = 3,
                            CTID = 2,
                            Description = "fightttt",
                            Name = "MMA",
                            PTID = 2
                        },
                        new
                        {
                            CID = 4,
                            CTID = 3,
                            Description = "relax",
                            Name = "Yoga",
                            PTID = 3
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.ClassTypeModel", b =>
                {
                    b.Property<int>("CTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CTID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CTID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CTID");

                    b.ToTable("ClassTypes", (string)null);

                    b.HasData(
                        new
                        {
                            CTID = 1,
                            Name = "dance"
                        },
                        new
                        {
                            CTID = 2,
                            Name = "fight"
                        },
                        new
                        {
                            CTID = 3,
                            Name = "stretch"
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.CompleteWorkoutModel", b =>
                {
                    b.Property<int>("WID")
                        .HasColumnType("int")
                        .HasColumnName("WID");

                    b.Property<int>("EID")
                        .HasColumnType("int")
                        .HasColumnName("EID");

                    b.Property<int>("RepsPerSet")
                        .HasColumnType("int")
                        .HasColumnName("RepsPerSet");

                    b.Property<int>("Sets")
                        .HasColumnType("int");

                    b.HasKey("WID", "EID");

                    b.HasIndex("EID");

                    b.ToTable("CompleteWorkouts", (string)null);

                    b.HasData(
                        new
                        {
                            WID = 1,
                            EID = 1,
                            RepsPerSet = 10,
                            Sets = 4
                        },
                        new
                        {
                            WID = 1,
                            EID = 3,
                            RepsPerSet = 12,
                            Sets = 4
                        },
                        new
                        {
                            WID = 2,
                            EID = 2,
                            RepsPerSet = 8,
                            Sets = 5
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.ExercisesModel", b =>
                {
                    b.Property<int>("EID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(MAX)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<int>("MGID")
                        .HasColumnType("int")
                        .HasColumnName("MGID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("EID");

                    b.HasIndex("MGID");

                    b.ToTable("Exercises", (string)null);

                    b.HasData(
                        new
                        {
                            EID = 1,
                            Description = "a",
                            Difficulty = 8,
                            MGID = 1,
                            Name = "Bench Press"
                        },
                        new
                        {
                            EID = 2,
                            Description = "a",
                            Difficulty = 8,
                            MGID = 5,
                            Name = "Pull Ups"
                        },
                        new
                        {
                            EID = 3,
                            Description = "a",
                            Difficulty = 6,
                            MGID = 1,
                            Name = "Cable Flys"
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.MuscleGroupModel", b =>
                {
                    b.Property<int>("MGID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MGID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MGID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("MGID");

                    b.ToTable("MuscleGroups", (string)null);

                    b.HasData(
                        new
                        {
                            MGID = 1,
                            Name = "Chest"
                        },
                        new
                        {
                            MGID = 2,
                            Name = "Legs"
                        },
                        new
                        {
                            MGID = 3,
                            Name = "Arms"
                        },
                        new
                        {
                            MGID = 4,
                            Name = "Abs"
                        },
                        new
                        {
                            MGID = 5,
                            Name = "Back"
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.OrderItemModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderItem", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            OrderID = 1,
                            ProductID = 1,
                            Quantity = 1
                        },
                        new
                        {
                            ID = 2,
                            OrderID = 1,
                            ProductID = 2,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.OrderModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Order", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            OrderDate = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserID = 1
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.PersonalTrainerModel", b =>
                {
                    b.Property<int>("PTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PTID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PTID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("WorksSince")
                        .HasColumnType("datetime2")
                        .HasColumnName("WorksSince");

                    b.HasKey("PTID");

                    b.ToTable("PersonalTrainers", (string)null);

                    b.HasData(
                        new
                        {
                            PTID = 1,
                            FirstName = "Zelu",
                            LastName = "Popa",
                            WorksSince = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            PTID = 2,
                            FirstName = "Rares",
                            LastName = "Racsan",
                            WorksSince = new DateTime(2024, 3, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.ProductModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhotoURL")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            Color = "N/A",
                            Description = "High-quality whey protein for muscle building.",
                            Name = "Protein Powder",
                            PhotoURL = "https://m.media-amazon.com/images/I/711Lq+gNUtL._AC_UF1000,1000_QL80_.jpg",
                            Price = 29.99m,
                            Size = "2 lb",
                            Stock = 50
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 2,
                            Color = "Purple",
                            Description = "Non-slip yoga mat for all levels.",
                            Name = "Yoga Mat",
                            PhotoURL = "https://i5.walmartimages.com/seo/CAP-High-Density-1-inch-Thick-Exercise-Mat-with-Carry-Strap-71-x24-x1-Purple_8c5eca06-c117-4677-8d0d-71cee6065b4c.8aeda60b6c033b50c0bc2f993eab60f5.jpeg",
                            Price = 19.99m,
                            Size = "Standard",
                            Stock = 120
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.RankDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ColorArgb")
                        .HasColumnType("int")
                        .HasColumnName("ColorValue");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MaxPoints")
                        .HasColumnType("int");

                    b.Property<int>("MinPoints")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RankDefinitions", (string)null);
                });

            modelBuilder.Entity("Workout.Core.Models.RankingModel", b =>
                {
                    b.Property<int>("UID")
                        .HasColumnType("int")
                        .HasColumnName("UID");

                    b.Property<int>("MGID")
                        .HasColumnType("int")
                        .HasColumnName("MGID");

                    b.Property<int>("Rank")
                        .HasColumnType("int")
                        .HasColumnName("Rank");

                    b.HasKey("UID", "MGID");

                    b.HasIndex("MGID");

                    b.ToTable("Rankings", (string)null);

                    b.HasData(
                        new
                        {
                            UID = 1,
                            MGID = 1,
                            Rank = 2000
                        },
                        new
                        {
                            UID = 1,
                            MGID = 2,
                            Rank = 7800
                        },
                        new
                        {
                            UID = 1,
                            MGID = 3,
                            Rank = 6700
                        },
                        new
                        {
                            UID = 1,
                            MGID = 4,
                            Rank = 9600
                        },
                        new
                        {
                            UID = 1,
                            MGID = 5,
                            Rank = 3700
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.UserClassModel", b =>
                {
                    b.Property<int>("UID")
                        .HasColumnType("int")
                        .HasColumnName("UID");

                    b.Property<int>("CID")
                        .HasColumnType("int")
                        .HasColumnName("CID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date");

                    b.HasKey("UID", "CID", "Date");

                    b.HasIndex("CID");

                    b.ToTable("UserClasses", (string)null);
                });

            modelBuilder.Entity("Workout.Core.Models.UserModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ID");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Email = "user1@example.com",
                            Password = "password1",
                            Username = "user1"
                        },
                        new
                        {
                            ID = 2,
                            Email = "user2@example.com",
                            Password = "password2",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.UserWorkoutModel", b =>
                {
                    b.Property<int>("UID")
                        .HasColumnType("int")
                        .HasColumnName("UID");

                    b.Property<int>("WID")
                        .HasColumnType("int")
                        .HasColumnName("WID");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date");

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.HasKey("UID", "WID", "Date");

                    b.HasIndex("WID");

                    b.ToTable("UserWorkouts", (string)null);

                    b.HasData(
                        new
                        {
                            UID = 1,
                            WID = 1,
                            Date = new DateTime(2025, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Completed = true
                        },
                        new
                        {
                            UID = 1,
                            WID = 2,
                            Date = new DateTime(2025, 3, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Completed = false
                        },
                        new
                        {
                            UID = 2,
                            WID = 1,
                            Date = new DateTime(2025, 3, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Completed = true
                        },
                        new
                        {
                            UID = 2,
                            WID = 2,
                            Date = new DateTime(2025, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Completed = false
                        },
                        new
                        {
                            UID = 1,
                            WID = 3,
                            Date = new DateTime(2025, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Completed = true
                        },
                        new
                        {
                            UID = 1,
                            WID = 1,
                            Date = new DateTime(2025, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Completed = true
                        },
                        new
                        {
                            UID = 1,
                            WID = 4,
                            Date = new DateTime(2025, 4, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Completed = false
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.WishlistItemModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("WishlistItem", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ProductID = 1,
                            UserID = 1
                        },
                        new
                        {
                            ID = 2,
                            ProductID = 1,
                            UserID = 2
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.WorkoutModel", b =>
                {
                    b.Property<int>("WID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("WTID")
                        .HasColumnType("int")
                        .HasColumnName("WTID");

                    b.HasKey("WID");

                    b.HasIndex("WTID");

                    b.ToTable("Workouts", (string)null);

                    b.HasData(
                        new
                        {
                            WID = 1,
                            Description = "",
                            Name = "workout1",
                            WTID = 1
                        },
                        new
                        {
                            WID = 2,
                            Description = "",
                            Name = "workout2",
                            WTID = 1
                        },
                        new
                        {
                            WID = 3,
                            Description = "",
                            Name = "workout3",
                            WTID = 1
                        },
                        new
                        {
                            WID = 4,
                            Description = "",
                            Name = "workout4",
                            WTID = 1
                        },
                        new
                        {
                            WID = 5,
                            Description = "",
                            Name = "workout5",
                            WTID = 2
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.WorkoutTypeModel", b =>
                {
                    b.Property<int>("WTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WTID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WTID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("WTID");

                    b.ToTable("WorkoutTypes", (string)null);

                    b.HasData(
                        new
                        {
                            WTID = 1,
                            Name = "upper"
                        },
                        new
                        {
                            WTID = 2,
                            Name = "lower"
                        });
                });

            modelBuilder.Entity("Workout.Core.Models.CartItemModel", b =>
                {
                    b.HasOne("Workout.Core.Models.ProductModel", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout.Core.Models.UserModel", "User")
                        .WithMany("CartItems")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Workout.Core.Models.ClassModel", b =>
                {
                    b.HasOne("Workout.Core.Models.ClassTypeModel", "ClassType")
                        .WithMany()
                        .HasForeignKey("CTID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout.Core.Models.PersonalTrainerModel", "PersonalTrainer")
                        .WithMany()
                        .HasForeignKey("PTID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassType");

                    b.Navigation("PersonalTrainer");
                });

            modelBuilder.Entity("Workout.Core.Models.CompleteWorkoutModel", b =>
                {
                    b.HasOne("Workout.Core.Models.ExercisesModel", "Exercise")
                        .WithMany()
                        .HasForeignKey("EID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout.Core.Models.WorkoutModel", "Workout")
                        .WithMany("CompleteWorkouts")
                        .HasForeignKey("WID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("Workout.Core.Models.ExercisesModel", b =>
                {
                    b.HasOne("Workout.Core.Models.MuscleGroupModel", "MuscleGroup")
                        .WithMany()
                        .HasForeignKey("MGID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MuscleGroup");
                });

            modelBuilder.Entity("Workout.Core.Models.OrderItemModel", b =>
                {
                    b.HasOne("Workout.Core.Models.OrderModel", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout.Core.Models.ProductModel", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Workout.Core.Models.OrderModel", b =>
                {
                    b.HasOne("Workout.Core.Models.UserModel", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Workout.Core.Models.ProductModel", b =>
                {
                    b.HasOne("Workout.Core.Models.CategoryModel", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Workout.Core.Models.RankingModel", b =>
                {
                    b.HasOne("Workout.Core.Models.MuscleGroupModel", "MuscleGroup")
                        .WithMany()
                        .HasForeignKey("MGID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout.Core.Models.UserModel", "User")
                        .WithMany("Rankings")
                        .HasForeignKey("UID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MuscleGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Workout.Core.Models.UserClassModel", b =>
                {
                    b.HasOne("Workout.Core.Models.ClassModel", "Class")
                        .WithMany("UserClasses")
                        .HasForeignKey("CID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout.Core.Models.UserModel", "User")
                        .WithMany("UserClasses")
                        .HasForeignKey("UID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Workout.Core.Models.UserWorkoutModel", b =>
                {
                    b.HasOne("Workout.Core.Models.UserModel", "User")
                        .WithMany("UserWorkouts")
                        .HasForeignKey("UID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout.Core.Models.WorkoutModel", "Workout")
                        .WithMany("UserWorkouts")
                        .HasForeignKey("WID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("Workout.Core.Models.WishlistItemModel", b =>
                {
                    b.HasOne("Workout.Core.Models.ProductModel", "Product")
                        .WithMany("WishlistItems")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Workout.Core.Models.UserModel", "User")
                        .WithMany("WishlistItems")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Workout.Core.Models.WorkoutModel", b =>
                {
                    b.HasOne("Workout.Core.Models.WorkoutTypeModel", "WorkoutType")
                        .WithMany()
                        .HasForeignKey("WTID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkoutType");
                });

            modelBuilder.Entity("Workout.Core.Models.CategoryModel", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Workout.Core.Models.ClassModel", b =>
                {
                    b.Navigation("UserClasses");
                });

            modelBuilder.Entity("Workout.Core.Models.OrderModel", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("Workout.Core.Models.ProductModel", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");

                    b.Navigation("WishlistItems");
                });

            modelBuilder.Entity("Workout.Core.Models.UserModel", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Orders");

                    b.Navigation("Rankings");

                    b.Navigation("UserClasses");

                    b.Navigation("UserWorkouts");

                    b.Navigation("WishlistItems");
                });

            modelBuilder.Entity("Workout.Core.Models.WorkoutModel", b =>
                {
                    b.Navigation("CompleteWorkouts");

                    b.Navigation("UserWorkouts");
                });
#pragma warning restore 612, 618
        }
    }
}
